name: Deploy to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Build .NET Backend
        run: |
          cd API
          dotnet restore
          dotnet publish -c Release -r linux-arm64 --self-contained -o ../publish

      - name: Build React Frontend
        run: |
          cd client-app
          npm ci
          npm run build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST_LIVELY }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install and configure nginx if not present
            if ! command -v nginx &> /dev/null; then
              sudo yum install -y nginx
              sudo systemctl enable nginx
            fi

            # Configure nginx for .NET reverse proxy
            if [ ! -f /etc/nginx/conf.d/lively.conf ]; then
              sudo tee /etc/nginx/conf.d/lively.conf > /dev/null <<'EOF'
            server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass http://127.0.0.1:5000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
            EOF
              sudo systemctl restart nginx
            fi

            # Create directory
            sudo mkdir -p /var/www/lively
            sudo chown -R ec2-user:ec2-user /var/www/lively

            # Create systemd service if not present
            if [ ! -f /etc/systemd/system/lively.service ]; then
              sudo tee /etc/systemd/system/lively.service > /dev/null <<'EOF'
            [Unit]
            Description=Lively ASP.NET Core App
            After=network.target

            [Service]
            Type=simple
            WorkingDirectory=/var/www/lively/publish
            ExecStart=/var/www/lively/publish/API
            Restart=always
            RestartSec=10
            KillSignal=SIGINT
            SyslogIdentifier=lively
            User=ec2-user
            Environment=ASPNETCORE_ENVIRONMENT=Production
            Environment=ASPNETCORE_URLS=http://127.0.0.1:5000

            [Install]
            WantedBy=multi-user.target
            EOF
              sudo systemctl enable lively.service
            fi

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_LIVELY }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "publish/,client-app/build/"
          target: "/var/www/lively/"
          strip_components: 0

      - name: Restart service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST_LIVELY }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart lively.service
            sudo systemctl reload nginx
